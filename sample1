package debug

import (
    "fmt"
    "testing"

)

type MockRouter struct {
    IPAddress string
}


func (r *MockRouter) CheckInterfaceState(interfaceName string) (string, error) {
    fmt.Printf("Checking state of interface %s on router with IP address: %s\n", interfaceName, r.IPAddress)
    return "up", nil
}

func TestInterfaceState(t *testing.T) {

    router := &MockRouter{IPAddress: "10.133.35.158"}

    state, err := router.CheckInterfaceState("eth1/2")

    if err != nil {
        fmt.Printf("Error checking interface state: %v\n", err)
        t.FailNow()
    }

    fmt.Printf("State of interface eth1/1: %s\n", state)

    if state != "up" {
        fmt.Println("Interface eth1/1 is down")
        t.Fail()
    } else {
        fmt.Println("Interface eth1/1 is up")
    }
}

func TestInterfaceState2(t *testing.T) {

    router := &MockRouter{IPAddress: "10.133.35.158"}

    state, err := router.CheckInterfaceState("eth1/2")

    if err != nil {
        fmt.Printf("Error checking interface state: %v\n", err)
        t.FailNow()
    }

    fmt.Printf("State of interface eth1/2: %s\n", state)

    if state != "up" {
        fmt.Println("Interface eth1/2 is down")
        t.Fail()
    } else {
        fmt.Println("Interface eth1/2 is up")
    }
}
