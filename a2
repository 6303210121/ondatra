
package your_package

import (
  "fmt"
  "testing"
  "os/exec"
  "strings"
)

func TestRouterInfo(t *testing.T) {
  // Replace with your router IP and desired commands
  routerIP := "10.133.35.158"
  commands := []string{
    "show ip interface brief",
    "show ip route",
    "show version",
  }

  for _, command := range commands {
    // Execute the command on the router
    output, err := exec.Command("ssh", "-l", "your_username", routerIP, command).Output()
    if err != nil {
      t.Errorf("Error running command '%s' on router: %v", command, err)
      continue
    }

    // Process and print the output
    trimmedOutput := strings.TrimSpace(string(output))
    fmt.Println("----------- Output for", command, "-----------")
    fmt.Println(trimmedOutput)
    fmt.Println("-----------------------------------------")

    // Perform specific checks on the output (optional)
    // ...
  }
}



................

package main

import (
	"os/exec"
	"testing"
)

func TestRouterInfo(t *testing.T) {
	// Replace "your_router_command" with the actual command to get router information
	cmd := exec.Command("your_router_command")

	// Run the command and capture the output
	output, err := cmd.CombinedOutput()
	if err != nil {
		t.Fatalf("Error executing router command: %v", err)
	}

	// Check if the output contains expected information
	expectedInfo := "expected_router_info"
	if !contains(output, expectedInfo) {
		t.Errorf("Router information not as expected. Expected: %s, Actual: %s", expectedInfo, string(output))
	}
}

// Helper function to check if a string contains a substring
func contains(s []byte, substr string) bool {
	return strings.Contains(string(s), substr)
}
